// <auto-generated />
using System;
using E3_BarrocIntens.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E3_BarrocIntens.Migrations
{
    [DbContext(typeof(BarrocIntensDataContext))]
    [Migration("20241108113816_LeaseContractMigration2")]
    partial class LeaseContractMigration2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("E3_BarrocIntens.Data.Lease_Contracts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Bkr_Check")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Company_Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date_Created")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("End_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Payment_Status")
                        .HasColumnType("longtext");

                    b.Property<double>("Price_Per_Period")
                        .HasColumnType("double");

                    b.Property<string>("Product")
                        .HasColumnType("longtext");

                    b.Property<int>("Time_Per_Period")
                        .HasColumnType("int");

                    b.Property<double>("Total_Price")
                        .HasColumnType("double");

                    b.Property<string>("Type_Of_Time")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Lease_Contracts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bkr_Check = false,
                            Company_Id = 1,
                            Date_Created = new DateTime(2024, 11, 8, 12, 38, 15, 844, DateTimeKind.Local).AddTicks(4597),
                            End_Date = new DateTime(2024, 11, 8, 12, 38, 15, 844, DateTimeKind.Local).AddTicks(4597),
                            Payment_Status = "Unpaid",
                            Price_Per_Period = 100.0,
                            Product = "TestProduct",
                            Time_Per_Period = 1,
                            Total_Price = 1000.0,
                            Type_Of_Time = "Monthly"
                        },
                        new
                        {
                            Id = 2,
                            Bkr_Check = false,
                            Company_Id = 2,
                            Date_Created = new DateTime(2024, 11, 8, 12, 38, 15, 844, DateTimeKind.Local).AddTicks(4660),
                            End_Date = new DateTime(2024, 11, 8, 12, 38, 15, 844, DateTimeKind.Local).AddTicks(4660),
                            Payment_Status = "Unpaid",
                            Price_Per_Period = 200.0,
                            Product = "TestProduct",
                            Time_Per_Period = 1,
                            Total_Price = 2000.0,
                            Type_Of_Time = "Monthly"
                        },
                        new
                        {
                            Id = 3,
                            Bkr_Check = false,
                            Company_Id = 3,
                            Date_Created = new DateTime(2024, 11, 8, 12, 38, 15, 844, DateTimeKind.Local).AddTicks(4663),
                            End_Date = new DateTime(2024, 11, 8, 12, 38, 15, 844, DateTimeKind.Local).AddTicks(4663),
                            Payment_Status = "Unpaid",
                            Price_Per_Period = 300.0,
                            Product = "TestProduct",
                            Time_Per_Period = 1,
                            Total_Price = 3000.0,
                            Type_Of_Time = "Monthly"
                        },
                        new
                        {
                            Id = 4,
                            Bkr_Check = false,
                            Company_Id = 4,
                            Date_Created = new DateTime(2024, 11, 8, 12, 38, 15, 844, DateTimeKind.Local).AddTicks(4666),
                            End_Date = new DateTime(2024, 11, 8, 12, 38, 15, 844, DateTimeKind.Local).AddTicks(4666),
                            Payment_Status = "Unpaid",
                            Price_Per_Period = 400.0,
                            Product = "TestProduct",
                            Time_Per_Period = 1,
                            Total_Price = 4000.0,
                            Type_Of_Time = "Monthly"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
